<snippets namespace="" license="BSD" filetypes="Python" snippetlicense="public domain" authors="LuboÅ¡ Pechar" name="Django">
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name)</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}')</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name = '', help_text = '')</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}', help_text = '%{help_text}')</fillin>
 </item>
 <item>
  <displayprefix>comment</displayprefix>
  <match>utf8</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin># coding: utf-8</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>c_models</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments>(models.Model)</displayarguments>
  <fillin>class %{name}(models.Model):</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name, null, blank)</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}', null = True, blank = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name = '', help_text = '', null = True, blank = True)</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}', help_text = '%{help_text}', null = True, blank = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name = '', help_text = '', unique = True)</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}', help_text = '%{help_text}', unique = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name = '', unique = True)</displayarguments>
  <fillin>models.IntegerField(verbose_name = '%{verbose_name}', unique = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments>(max_length = 255, verbose_name = '')</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}')</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, verbose_name = '', help_text = '')</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}', help_text = '%{help_text}')</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, verbose_name = '', null = True, blank = True)</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}', null = True, blank = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, verbose_name = '', help_text = '', null = True, blank = True)</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}', help_text = '%{help_text}', null = True, blank = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, verbose_name = '', help_text = '', unique = True)</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}', help_text = '%{help_text}', unique = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, verbose_name = '', unique = True)</displayarguments>
  <fillin>models.CharField(max_length = %{255}, verbose_name = '%{verbose_name}', unique = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>foreignkey</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name = '')</displayarguments>
  <fillin>models.ForeignKey(%{key}, verbose_name = '%{verbose_name}')</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>charfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (max_length = 255, unique = True)</displayarguments>
  <fillin>models.CharField(max_length = %{255}, unique = True)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>foreignkey</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>models.ForeignKey(%{key})</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>integerfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>models.IntegerField()</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>datetimefield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>models.DateTimeField()</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>a_reg</match>
  <displaypostfix>admin</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>admin.site.register(%{Model})</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>c_meta</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name, verbose_name_plural)</displayarguments>
  <fillin>class Meta:
	verbose_name = '%{verbose_name}'
	verbose_name_plural = '%{verbose_name_plural}'</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>c_meta</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name, verbose_name_plural, ordering)</displayarguments>
  <fillin>class Meta:
	verbose_name = '%{verbose_name}'
	verbose_name_plural = '%{verbose_name_plural}'
	ordering = ['%{ordering}']</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>d_unicode</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>def __unicode__(self):
	return self.%{unicode}</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>c_admin</match>
  <displaypostfix>admin</displaypostfix>
  <displayarguments> (fields)</displayarguments>
  <fillin>class %{Model}Admin(admin.ModelAdmin):
	fields = ('%{fields}')
	pass

admin.site.register(%{Model}, %{Model}Admin)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>c_admin</match>
  <displaypostfix>admin</displaypostfix>
  <displayarguments> (list_filter, list_display)</displayarguments>
  <fillin>class %{Model}Admin(admin.ModelAdmin):
	list_filter = ('%{list_filter}',)
	list_display = ('%{list_display}',)
	pass

admin.site.register(%{Model}, %{Model}Admin)</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>booleanfield</match>
  <displaypostfix>modles</displaypostfix>
  <displayarguments> (verbose_name)</displayarguments>
  <fillin>models.BooleanField(verbose_name = '%{verbose_name}')</fillin>
 </item>
 <item>
  <displayprefix>Django</displayprefix>
  <match>floatfield</match>
  <displaypostfix>models</displaypostfix>
  <displayarguments> (verbose_name)</displayarguments>
  <fillin>models.FloatField(verbose_name = '%{verbose_name}')</fillin>
 </item>
</snippets>
